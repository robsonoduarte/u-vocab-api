plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.sonarqube' version '4.3.0.3225'
	id 'com.avast.gradle.docker-compose' version '0.16.12'
	id 'jacoco'
	id 'groovy'
	id 'com.diffplug.spotless' version '6.20.0'
	id 'com.bmuschko.docker-spring-boot-application' version '9.3.2'
	id "com.google.protobuf" version "0.9.4"
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '20'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

jacoco { toolVersion = "0.8.10" }

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'com.google.protobuf:protobuf-java:3.24.3'
	implementation 'io.grpc:grpc-protobuf:1.58.0'
	implementation 'io.grpc:grpc-stub:1.58.0'
	implementation 'io.grpc:grpc-netty:1.58.0'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.codehaus.groovy:groovy:3.0.18'
	testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
}

if (!project.hasProperty('noDockerCompose')) {
	dockerCompose {
		stopContainers = true
		removeContainers = true
		removeVolumes = true
		waitForTcpPorts = true
	}
	dockerCompose.isRequiredBy(test)
}

tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.required = true
	}
	dependsOn test
}

sonar {
	properties {
		property "sonar.projectKey", "robsonoduarte_u-vocab-api"
		property "sonar.organization", "uvocab"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.tests", [
			"${project.projectDir}/src/test/java",
		]
	}
}

tasks.named('sonar').configure {
	dependsOn jacocoTestReport
}

spotless {
	java {
		googleJavaFormat()
	}
	groovy {
		greclipse()
	}
	groovyGradle {
		greclipse()
	}
}

docker {
	springBootApplication {
		baseImage = 'azul/zulu-openjdk:20.0.2-20.32.11'
	}
}

sourceSets {
	main {
		java {
			srcDirs += file("${protobuf.generatedFilesBaseDir}/main/java")
		}
		proto {
			srcDir 'u-vocab-protobuf/'
			include '**/*.proto'
			//exclude 'google/**/*.proto'
		}
	}
}

protobuf {
	protoc { artifact = "com.google.protobuf:protoc:3.24.3" }
}

